

##############################################################################
# This function is used to take in information about someone to add to the
# LDAP and then create the text file LDAP needs when adding a user.
##############################################################################
def ldapuserfilemaker(firstName, lastName, userName, uid, gid):

    try:
        f = open("ldapUserEntry.txt", "x")      # creates the file if needed
    except IOError:
        f = open("ldapUserEntry.txt", "w")      # opens the file if it exist

    f.write("dn: uid=" + userName + ",ou=users,dc=babbage,dc=augsburg,dc=edu" + "\n")
    f.write("objectClass: posixAccount" + "\n")
    f.write("objectClass: inetOrgPerson" + "\n")
    f.write("objectClass: organizationalPerson" + "\n")
    f.write("objectClass: Person" + "\n")
    f.write("loginShell: /bin/bash" + "\n")
    f.write("uid: " + userName + "\n")
    f.write("cn: " + userName + "\n")
    f.write("gecos: " + firstName + " " + lastName + "\n")
    f.write("uidNumber: " + uid + "\n")
    f.write("gidNumber: " + gid + "\n")
    f.write("sn: " + lastName + "\n")
    f.write("givenName: " + firstName + "\n")
    f.write("homeDirectory: /nfs/home/" + userName)

##############################################################################
# This function test the output of the ldapuserfilemaker() function. It has
# canned data and will populate the output file with it so you can see how
# the layout will look.
##############################################################################
def testldapuserfilemaker():

    firstName = "John"
    lastName = "Doe"
    username = "doej"
    uid = "1000"
    gid = "1000"
    ldapuserfilemaker(firstName, lastName, username, uid, gid)

##############################################################################
# This function is used to take in information about a group to add to the
# LDAP and then create the text file LDAP needs when adding a group.
##############################################################################
def ldapgroupfilemaker(userName, gid):

    try:
        f = open("ldapGroupEntry.txt", "x")     # creates the file if needed
    except IOError:
        f = open("ldapGroupEntry.txt", "w")     # opens the file if it exist

    f.write("dn: cn=" + userName + ",ou=groups,dc=babbage,dc=augsburg,dc=edu\n")
    f.write("objectClass: top\n")
    f.write("objectClass: posixGroup\n")
    f.write("gidNumber:" + gid)

##############################################################################
# This function test the output of the ldapuserfilemaker() function. It has
# canned data and will populate the output file with it so you can see how
# the layout will look.
##############################################################################
def testldapgroupfilemaker():

    firstName = "John"
    lastName = "Doe"
    username = "doej"
    uid = "1000"
    gid = "1000"
    ldapgroupfilemaker(username, gid)




##############################################################################
#
##############################################################################
def main():

    testldapuserfilemaker()     # Test the user file maker to see output
    testldapgroupfilemaker()    # Test the group file maker to see output


main()